# Railway-optimized Dockerfile for LightRAG with Vietnamese Embedding
# Optimized for size: CPU-only torch, minimal dependencies, cleanup
# Target: <4GB for Railway free tier

FROM python:3.10-slim-bullseye

WORKDIR /app

# Install minimal system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Upgrade pip
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Copy project files
COPY pyproject.toml setup.py MANIFEST.in ./
COPY lightrag/ ./lightrag/

# Install PyTorch CPU-only (much smaller than CUDA version)
# torch CPU: ~200MB vs torch+CUDA: ~2GB
RUN echo "üîß Installing PyTorch CPU-only (optimized for size)..." && \
    pip install --no-cache-dir \
        torch==2.1.0+cpu \
        -f https://download.pytorch.org/whl/torch_stable.html && \
    echo "‚úÖ PyTorch CPU installed"

# Install transformers with minimal dependencies
RUN echo "üîß Installing Transformers..." && \
    pip install --no-cache-dir \
        transformers>=4.30.0 \
        sentencepiece \
        && \
    echo "‚úÖ Transformers installed"

# Install LightRAG with API dependencies (excluding torch/transformers already installed)
RUN echo "üîß Installing LightRAG..." && \
    pip install --no-cache-dir -e .[api] && \
    echo "‚úÖ LightRAG installed"

# Clean up pip cache and unnecessary files to reduce image size
RUN echo "üßπ Cleaning up..." && \
    pip cache purge && \
    find /usr/local/lib/python3.10 -type d -name "tests" -exec rm -rf {} + 2>/dev/null || true && \
    find /usr/local/lib/python3.10 -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true && \
    find /usr/local/lib/python3.10 -name "*.pyc" -delete && \
    find /usr/local/lib/python3.10 -name "*.pyo" -delete && \
    rm -rf /root/.cache/pip && \
    echo "‚úÖ Cleanup completed"

# Verify installations
RUN echo "üîç Verifying installations..." && \
    python -c "import torch; print(f'‚úÖ Torch {torch.__version__} (CPU) installed')" && \
    python -c "import transformers; print(f'‚úÖ Transformers installed')" && \
    python -c "from lightrag.llm.vietnamese_embed import vietnamese_embed; print('‚úÖ Vietnamese embedding ready')" && \
    echo "‚úÖ All verifications passed"

# Create data directories
RUN mkdir -p /app/data/rag_storage /app/data/inputs

# Environment variables
ENV WORKING_DIR=/app/data/rag_storage
ENV INPUT_DIR=/app/data/inputs
ENV PYTHONUNBUFFERED=1

# Expose port
EXPOSE 9621

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:9621/health || exit 1

# Start server
CMD ["lightrag-server"]
